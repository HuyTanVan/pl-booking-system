CREATE TABLE "users" (
  "id" INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "first_name" varchar,
  "last_name" varchar,
  "email" varchar UNIQUE NOT NULL,
  "password" varchar NOT NULL,
  "phone_number" varchar,
  "is_active" Boolean NOT NULL DEFAULT FALSE,
  "created_at" timestamptz NOT NULL DEFAULT (now()),
  "updated_at" timestamptz NOT NULL DEFAULT (now())
);

CREATE TABLE "teams" (
  "id" INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "name" varchar UNIQUE NOT NULL,
  "stadium_id" integer NOT NULL,
  "logo" varchar
);

CREATE TABLE "stadiums" (
  "id" INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "name" varchar UNIQUE NOT NULL,
  "location" varchar NOT NULL,
  "capacity" integer NOT NULL,
  "is_available" Boolean NOT NULL DEFAULT TRUE
);

CREATE TABLE "matches" (
  "id" INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "home_team_id" integer NOT NULL,
  "away_team_id" integer NOT NULL,
  "stadium_id" integer NOT NULL,
  "match_date" timestamp NOT NULL,
  "session" varchar NOT NULL ,
  "status" varchar NOT NULL
);

CREATE TABLE "tickets" (
  "id" INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "match_id" integer NOT NULL,
  "seat_id" integer NOT NULL,
  "original_price" NUMERIC(5,2) NOT NULL,
  "current_price" NUMERIC(5,2) NOT NULL,
  "is_available" Boolean NOT NULL,
  "created_at" timestamptz NOT NULL DEFAULT (now()),
  "updated_at" timestamptz NOT NULL DEFAULT (now()),
  UNIQUE (match_id, seat_id)
);

CREATE TABLE "seats" (
  "id" INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "stadium_id" integer NOT NULL,
  "block" varchar NOT NULL,
  "row" varchar NOT NULL,
  "seat_column" varchar NOT NULL,
  "seat_available" integer NOT NULL,
  -- "max_seat_capacity" integer NOT NULL,
  UNIQUE (block, row, seat_column),
  CHECK (seat_available >= 0)
);

CREATE TABLE "orders" (
  "id" INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "user_id" integer NOT NULL,
  "ticket_id" integer NOT NULL,
  "quantity" integer NOT NULL,
  "total_price" decimal NOT NULL,
  "additional_fees_id" integer NOT NULL,
  "payment_key" varchar UNIQUE NOT NULL,
  "created_at" timestamptz NOT NULL DEFAULT (now()),
  "updated_at" timestamptz NOT NULL DEFAULT (now())
);

CREATE TABLE "additional_fees" (
  "id" INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "service_fee" decimal NOT NULL,
  "vat_fee" decimal NOT NULL,
  "payment_processing_fee" decimal NOT NULL,
  "delivery_fee" decimal NOT NULL,
  "vip_fee" decimal NOT NULL,
  "specific_event_fee" decimal NOT NULL,
  "description" varchar NOT NULL,
  "created_at" timestamptz NOT NULL DEFAULT (now()),
  "updated_at" timestamptz NOT NULL DEFAULT (now())
);

CREATE TABLE "payments" (
  "id" INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "payment_key" varchar UNIQUE NOT NULL,
  "amount" decimal NOT NULL,
  "payment_method_id" integer NOT NULL,
  "status" varchar NOT NULL,
  "date" timestamptz NOT NULL DEFAULT (now()),
  "updated_at" timestamptz NOT NULL DEFAULT (now())
);

CREATE TABLE "payment_methods" (
  "id" INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "user_id" integer NOT NULL,
  "type" varchar NOT NULL,
  "card_number" varchar UNIQUE NOT NULL
);

CREATE INDEX ON "users" ("email");

CREATE INDEX ON "tickets" ("match_id");

CREATE INDEX ON "tickets" ("seat_id");

CREATE INDEX ON "tickets" ("match_id", "seat_id");

CREATE INDEX ON "seats" ("stadium_id");

CREATE INDEX ON "seats" ("block");

CREATE INDEX ON "seats" ("row");

CREATE INDEX ON "seats" ("stadium_id", "block", "row", "seat_column");

CREATE INDEX ON "orders" ("payment_key");

CREATE INDEX ON "payments" ("payment_key");

CREATE INDEX ON "payment_methods" ("card_number");

COMMENT ON COLUMN "teams"."logo" IS 'url for an image';

COMMENT ON COLUMN "stadiums"."capacity" IS 'can not be negative';

COMMENT ON COLUMN "tickets"."original_price" IS 'can not be negative';

COMMENT ON COLUMN "tickets"."current_price" IS 'can not be negative';

COMMENT ON COLUMN "orders"."quantity" IS 'must be positive';

COMMENT ON COLUMN "payments"."payment_key" IS 'stripe payment key';

COMMENT ON COLUMN "payments"."amount" IS 'can not be negative';

ALTER TABLE "teams" ADD FOREIGN KEY ("stadium_id") REFERENCES "stadiums" ("id");

ALTER TABLE "matches" ADD FOREIGN KEY ("home_team_id") REFERENCES "teams" ("id");

ALTER TABLE "matches" ADD FOREIGN KEY ("away_team_id") REFERENCES "teams" ("id");

ALTER TABLE "matches" ADD FOREIGN KEY ("stadium_id") REFERENCES "stadiums" ("id");

ALTER TABLE "tickets" ADD FOREIGN KEY ("match_id") REFERENCES "matches" ("id");

ALTER TABLE "tickets" ADD FOREIGN KEY ("seat_id") REFERENCES "seats" ("id");

ALTER TABLE "seats" ADD FOREIGN KEY ("stadium_id") REFERENCES "stadiums" ("id");

ALTER TABLE "orders" ADD FOREIGN KEY ("user_id") REFERENCES "users" ("id");

ALTER TABLE "orders" ADD FOREIGN KEY ("ticket_id") REFERENCES "tickets" ("id");

ALTER TABLE "orders" ADD FOREIGN KEY ("payment_key") REFERENCES "payments" ("payment_key");

ALTER TABLE "orders" ADD FOREIGN KEY ("additional_fees_id") REFERENCES "additional_fees" ("id");

ALTER TABLE "payments" ADD FOREIGN KEY ("payment_method_id") REFERENCES "payment_methods" ("id");

ALTER TABLE "payment_methods" ADD FOREIGN KEY ("user_id") REFERENCES "users" ("id");
